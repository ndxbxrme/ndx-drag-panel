{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "../src/",
  "sources": [
    "index.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\r\nmodule = null\r\ntry\r\n  module = angular.module 'ndx'\r\ncatch e\r\n  module = angular.module 'ndx', []\r\nmodule.directive 'dragPanel', ->\r\n  restrict: 'AE'\r\n  require: '?ngModel'\r\n  link: (scope, elem, attrs, ctrl) ->\r\n    callbacks =\r\n      start: []\r\n      move: []\r\n      end: []\r\n    callCallbacks = (name, args) ->\r\n      for cb in callbacks[name]\r\n        cb? args\r\n    horizontal = elem.hasClass 'horizontal'\r\n    pageDir = 'pageY'\r\n    elemDir = 'height'\r\n    dividers = $(elem).children('.divider')\r\n    if horizontal\r\n      pageDir = 'pageX'\r\n      elemDir = 'width'\r\n      dividers.addClass('horizontal')\r\n    measure = 0\r\n    prev = null\r\n    pagePos = 0\r\n    setFromArr = (arr) ->\r\n      allPanels = $(elem).children(':not(.divider)')\r\n      for p, i in allPanels\r\n        $(p).css\r\n          flex: (if arr then arr[i] else 1).toString()\r\n    if attrs.remote\r\n      remote = \r\n        setHorizontal: ->\r\n          elem.addClass 'horizontal'\r\n          pageDir = 'pageX'\r\n          elemDir = 'width'\r\n          dividers.addClass 'horizontal'\r\n          setFromArr()\r\n        setVertical: ->\r\n          elem.removeClass 'horizontal'\r\n          pageDir = 'pageY'\r\n          elemDir = 'height'\r\n          dividers.removeClass 'horizontal'\r\n          setFromArr()\r\n        on: (name, fn) ->\r\n          callbacks[name].push fn\r\n        off: (name, fn) ->\r\n          callbacks[name].splice(callbacks[name].indexOf(fn), 1)\r\n      scope[attrs.remote] = remote\r\n    dividers.bind 'mousedown', (e) ->\r\n      callCallbacks 'start'\r\n      e.preventDefault()\r\n      $target = $(e.target)\r\n      $target.addClass 'dragging'\r\n      prev = $target.prev()\r\n      next = $target.next()\r\n      measure = prev[elemDir]()\r\n      nextMeasure = next[elemDir]()\r\n      pagePos = e[pageDir]\r\n      allPanels = $(elem).children(':not(.divider)')\r\n      measures = []\r\n      for p in allPanels\r\n        $p = $(p)\r\n        measures.push $p[elemDir]()\r\n      for p, i in allPanels\r\n        $p = $(p)\r\n        $p.css\r\n          flex: measures[i].toString()\r\n      $(document).bind 'mousemove', (e) ->\r\n        offset = pagePos - e[pageDir]\r\n        newPrev = measure - offset\r\n        newNext = nextMeasure + offset\r\n        if newPrev > 0 and newNext > 0\r\n          prev.css\r\n            flex: newPrev.toString()\r\n           next.css\r\n            flex: newNext.toString()\r\n          callCallbacks 'move'\r\n      end = ->\r\n        $(document).unbind 'mousemove'\r\n        $(document).unbind 'mouseup'\r\n        $target.removeClass 'dragging'\r\n        if ctrl\r\n          sizes = []\r\n          for p in allPanels\r\n            sizes.push $(p)[elemDir]()\r\n          ctrl.$setViewValue sizes\r\n        callCallbacks 'end'\r\n      $(document).bind 'mouseup', (e) ->\r\n        end()\r\n      $(document).mouseleave (e) ->\r\n        end()\r\n    if ctrl\r\n      ctrl.$formatters.unshift (val) ->\r\n        setFromArr val\r\n        val\r\n    else\r\n      setFromArr()"
  ]
}